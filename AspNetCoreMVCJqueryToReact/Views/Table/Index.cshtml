@model TableViewModel

@{
    ViewData["Title"] = Model.Title;
}

<h1>@Model.Title</h1>

<div class="border border-primary">
    <a id="reRenderFiltersButton" class="btn text-primary p-0">REFRESH FILTERS AREA - MEMORY LEAK <strong>FIXED</strong> DEMO</a>
    <details>
        <summary>what is this memory leak demo? ...</summary>
        <p></p>
        <p>This demo is triggered by the above Refresh Link--"REFRESH FILTERS AREA - MEMORY LEAK FIXED DEMO"</p>
        <ol>
            <li>
                <p>Open browser dev tools to Components, and open the console</p>
            </li>
            <li>
                <p>Execute "ClientApp.PubSub.events()" and expand the array to see 2 events with 3 and 1 handlers respectively</p>
            </li>
            <li>
                <p>Click the Refresh Link one or more times--watch dev tools Components area <strong>REPLACE</strong> Components</p>
            </li>
            <li>
                <p>Again, execute "ClientApp.PubSub.events()" and see the 2 events now have the <strong>SAME COUNT</strong> of handlers</p>
            </li>
        </ol>
        <p>The Refresh Link is now working right--fixed by telling React to unmount the components</p>
        <ul>
            <li>
                <p>Since React had no knowledge of the direct DOM updates React was not removing any components--now it is, resulting in no duplicates</p>
            </li>
            <li>
                <p>Since React was not unmounting components, these components could not unsubscribe from events--now they are, resulting in no extra handlers</p>
            </li>
        </ul>
    </details>
</div>


<div class="form-inline">
    <div>Column Filters</div>
    <div id="columnFiltersContainer" class="form-inline">
        <div id="filter-names"></div>
        <div id="filter-roles"></div>
        <div id="filter-jobs"></div>
        <div id="clearFilters"></div>
    </div>
</div>

<table id="table" class="table table-striped">
    <thead>
        <tr>
            <th>@Model.Columns.Name</th>
            <th>@Model.Columns.Role</th>
            <th>@Model.Columns.Job</th>
        </tr>
    </thead>
</table>

@section Scripts {
    <script src="~/js/table/crewTable.js" asp-append-version="true"></script>
    <script src="~/js/table/emptyTableMessage.js" asp-append-version="true"></script>
    <script src="~/js/table/filterNames.js" asp-append-version="true"></script>
    <script src="~/js/table/filterRoles.js" asp-append-version="true"></script>
    <script src="~/js/table/filterJobs.js" asp-append-version="true"></script>
    <script src="~/js/table/filtersClear.js" asp-append-version="true"></script>
    <script src="~/js/table/table.js" asp-append-version="true"></script>
}